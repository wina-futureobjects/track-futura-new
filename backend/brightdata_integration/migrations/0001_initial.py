# Generated by Django 5.1.6 on 2025-05-12 10:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BrightdataConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="Default", max_length=100)),
                ("api_token", models.CharField(max_length=255)),
                ("dataset_id", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Brightdata Configuration",
                "verbose_name_plural": "Brightdata Configurations",
            },
        ),
        migrations.CreateModel(
            name="ScraperRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("facebook", "Facebook"),
                            ("instagram", "Instagram"),
                            ("tiktok", "TikTok"),
                            ("linkedin", "LinkedIn"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("post", "Post"),
                            ("reel", "Reel"),
                            ("profile", "Profile"),
                        ],
                        default="post",
                        max_length=20,
                    ),
                ),
                ("target_url", models.URLField(max_length=500)),
                ("num_of_posts", models.IntegerField(default=10)),
                ("posts_to_not_include", models.TextField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_metadata", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("folder_id", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="brightdata_integration.brightdataconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "Scraper Request",
                "verbose_name_plural": "Scraper Requests",
                "ordering": ["-created_at"],
            },
        ),
    ]
