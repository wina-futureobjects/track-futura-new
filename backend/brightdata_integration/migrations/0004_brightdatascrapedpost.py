# Generated by Django 5.2 on 2025-10-08 14:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('brightdata_integration', '0003_brightdatascraperrequest_folder_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrightDataScrapedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_id', models.IntegerField(help_text='Job folder ID this post belongs to')),
                ('post_id', models.CharField(help_text='Platform-specific post ID', max_length=255)),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('platform', models.CharField(default='instagram', max_length=50)),
                ('user_posted', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('likes', models.IntegerField(default=0)),
                ('num_comments', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
                ('date_posted', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('hashtags', models.JSONField(blank=True, default=list)),
                ('mentions', models.JSONField(blank=True, default=list)),
                ('media_type', models.CharField(blank=True, max_length=50, null=True)),
                ('media_url', models.URLField(blank=True, max_length=500, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('follower_count', models.IntegerField(default=0)),
                ('raw_data', models.JSONField(default=dict, help_text='Original BrightData response')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scraper_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraped_posts', to='brightdata_integration.brightdatascraperrequest')),
            ],
            options={
                'verbose_name': 'BrightData Scraped Post',
                'verbose_name_plural': 'BrightData Scraped Posts',
                'ordering': ['-date_posted', '-created_at'],
                'indexes': [models.Index(fields=['folder_id'], name='brightdata__folder__8a6c43_idx'), models.Index(fields=['platform'], name='brightdata__platfor_13cb6f_idx'), models.Index(fields=['user_posted'], name='brightdata__user_po_ff3bc1_idx'), models.Index(fields=['date_posted'], name='brightdata__date_po_4aaa77_idx')],
                'unique_together': {('post_id', 'platform', 'scraper_request')},
            },
        ),
    ]
