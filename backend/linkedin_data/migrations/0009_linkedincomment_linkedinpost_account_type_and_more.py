# Generated by Django 5.2 on 2025-08-08 11:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('linkedin_data', '0008_folder_unified_job_folder_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='LinkedInComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('comment_text', models.TextField(blank=True, null=True)),
                ('comment_date', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_url', models.URLField(blank=True, max_length=500, null=True)),
                ('user_title', models.CharField(blank=True, max_length=255, null=True)),
                ('num_reactions', models.IntegerField(default=0)),
                ('tagged_users', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'LinkedIn Comment',
                'verbose_name_plural': 'LinkedIn Comments',
                'ordering': ['-comment_date'],
            },
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='account_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='author_profile_pic',
            field=models.URLField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='document_cover_image',
            field=models.URLField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='document_page_count',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='embedded_links',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='external_link_data',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='hashtags_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='images',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='num_connections',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='num_likes',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='num_shares',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='post_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='post_text_html',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='post_title',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='post_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='repost_data',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='tagged_companies',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='tagged_people',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_articles',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_followers',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_headline',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_posts',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_title',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='user_url',
            field=models.URLField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='video_duration',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='linkedinpost',
            name='video_thumbnail',
            field=models.URLField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='folder',
            name='folder_type',
            field=models.CharField(choices=[('run', 'Scraping Run'), ('platform', 'Platform'), ('service', 'Platform Service'), ('job', 'Job'), ('content', 'Content Folder')], default='content', help_text='Type of folder in the hierarchy', max_length=20),
        ),
        migrations.AlterField(
            model_name='linkedinpost',
            name='hashtags',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='linkedinpost',
            name='videos',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='linkedinpost',
            index=models.Index(fields=['user_id'], name='linkedin_da_user_id_b9e93f_idx'),
        ),
        migrations.AddIndex(
            model_name='linkedinpost',
            index=models.Index(fields=['post_type'], name='linkedin_da_post_ty_af4c1b_idx'),
        ),
        migrations.AddField(
            model_name='linkedincomment',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='linkedin_data.folder'),
        ),
        migrations.AddField(
            model_name='linkedincomment',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='linkedin_data.linkedinpost'),
        ),
        migrations.AddIndex(
            model_name='linkedincomment',
            index=models.Index(fields=['user_id'], name='linkedin_da_user_id_bcc3cd_idx'),
        ),
        migrations.AddIndex(
            model_name='linkedincomment',
            index=models.Index(fields=['comment_date'], name='linkedin_da_comment_73cc3d_idx'),
        ),
    ]
