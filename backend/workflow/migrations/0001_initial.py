# Generated by Django 5.2 on 2025-09-29 06:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apify_integration', '__first__'),
        ('track_accounts', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InputCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urls', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('platform_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_collections', to='users.platformservice')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_collections', to='users.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledScrapingTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn'), ('tiktok', 'TikTok')], max_length=50)),
                ('service_type', models.CharField(choices=[('posts', 'Posts'), ('comments', 'Comments'), ('reels', 'Reels'), ('profiles', 'Profiles')], default='posts', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('schedule_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom Interval')], default='daily', max_length=20)),
                ('schedule_interval', models.IntegerField(default=1, help_text='Interval in hours for custom schedule')),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('num_of_posts', models.IntegerField(blank=True, default=10, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('auto_create_folders', models.BooleanField(default=True)),
                ('apify_actor_id', models.CharField(default='default_actor_id', max_length=100)),
                ('apify_api_token', models.CharField(default='apify_api_2ep4XhM2qSVPIPHU1AQPYLlKnrqqbL0cqR49', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('error', 'Error')], default='active', max_length=20)),
                ('total_runs', models.IntegerField(default=0)),
                ('successful_runs', models.IntegerField(default=0)),
                ('failed_runs', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_tasks', to='users.project')),
                ('track_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_tasks', to='track_accounts.tracksource')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Scraping Run', max_length=255)),
                ('configuration', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_jobs', models.IntegerField(default=0)),
                ('completed_jobs', models.IntegerField(default=0)),
                ('successful_jobs', models.IntegerField(default=0)),
                ('failed_jobs', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_runs', to='users.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_tasks', to='apify_integration.apifybatchjob')),
                ('input_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_tasks', to='workflow.inputcollection')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(blank=True, help_text='Apify run ID for tracking', max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('dataset_id', models.CharField(max_length=100)),
                ('platform', models.CharField(max_length=50)),
                ('service_type', models.CharField(max_length=50)),
                ('url', models.URLField(max_length=500)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('batch_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_jobs', to='apify_integration.apifybatchjob')),
                ('input_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scraping_jobs', to='workflow.inputcollection')),
                ('scraping_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_jobs', to='workflow.scrapingrun')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['request_id'], name='workflow_sc_request_1a8087_idx'), models.Index(fields=['batch_job', 'url'], name='workflow_sc_batch_j_bf787a_idx')],
            },
        ),
    ]
