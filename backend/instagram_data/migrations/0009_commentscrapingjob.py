# Generated by Django 5.2 on 2025-05-29 10:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('instagram_data', '0008_instagrampost_alt_text_instagrampost_audio_and_more'),
        ('users', '0005_remove_organization_slug_remove_project_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentScrapingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this comment scraping job', max_length=255)),
                ('selected_folders', models.JSONField(help_text='List of folder IDs to scrape comments from')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_posts', models.IntegerField(default=0, help_text='Total number of posts to process')),
                ('processed_posts', models.IntegerField(default=0, help_text='Number of posts processed')),
                ('successful_requests', models.IntegerField(default=0, help_text='Number of successful API requests')),
                ('failed_requests', models.IntegerField(default=0, help_text='Number of failed API requests')),
                ('total_comments_scraped', models.IntegerField(default=0, help_text='Total comments scraped')),
                ('brightdata_job_id', models.CharField(blank=True, help_text='BrightData job ID', max_length=255, null=True)),
                ('brightdata_response', models.JSONField(blank=True, help_text='Full response from BrightData API', null=True)),
                ('error_log', models.TextField(blank=True, help_text='Error messages and logs', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instagram_comment_scraping_jobs', to='users.project')),
                ('result_folder', models.ForeignKey(blank=True, help_text='Folder to store scraped comments', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instagram_scraping_jobs', to='instagram_data.folder')),
            ],
            options={
                'verbose_name': 'Instagram Comment Scraping Job',
                'verbose_name_plural': 'Instagram Comment Scraping Jobs',
                'ordering': ['-created_at'],
            },
        ),
    ]
