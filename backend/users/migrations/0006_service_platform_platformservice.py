# Generated by Django 5.2 on 2025-08-01 16:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_remove_organization_slug_remove_project_slug'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Internal service name (e.g., 'posts', 'reels', 'comments')", max_length=50, unique=True)),
                ('display_name', models.CharField(help_text="User-friendly display name (e.g., 'Posts', 'Reels', 'Comments')", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the service', null=True)),
                ('icon_name', models.CharField(blank=True, help_text='Icon name for UI display', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Internal platform name (e.g., 'instagram', 'facebook')", max_length=50, unique=True)),
                ('display_name', models.CharField(help_text="User-friendly display name (e.g., 'Instagram', 'Facebook')", max_length=100)),
                ('is_enabled', models.BooleanField(default=True, help_text='Whether this platform is available for use')),
                ('description', models.TextField(blank=True, help_text='Description of the platform', null=True)),
                ('icon_name', models.CharField(blank=True, help_text='Icon name for UI display', max_length=50, null=True)),
                ('color', models.CharField(blank=True, help_text='Hex color code for UI display', max_length=7, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_platforms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Platform',
                'verbose_name_plural': 'Platforms',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='PlatformService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True, help_text='Whether this platform-service combination is available')),
                ('description', models.TextField(blank=True, help_text='Description of this platform-service combination', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_platform_services', to=settings.AUTH_USER_MODEL)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_services', to='users.platform')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_services', to='users.service')),
            ],
            options={
                'verbose_name': 'Platform Service',
                'verbose_name_plural': 'Platform Services',
                'unique_together': {('platform', 'service')},
            },
        ),
    ]
