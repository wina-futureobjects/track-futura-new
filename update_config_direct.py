#!/usr/bin/env python3\n\"\"\"\nDirect database update to match manualrun.py configuration\n\"\"\"\n\nimport os\nimport sys\nimport django\n\n# Setup Django\nsys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\ndjango.setup()\n\nfrom brightdata_integration.models import BrightdataConfig\n\n# Values from working manualrun.py\nWORKING_API_TOKEN = \"c20a28d5-5c6c-43c3-9567-a6d7c193e727\"\nWORKING_DATASET_ID = \"gd_lk5ns7kz21pck8jpis\"\n\nprint(\"üîß UPDATING DATABASE CONFIGURATION\")\nprint(\"=\" * 50)\n\n# Deactivate all existing Instagram configs\nBrightdataConfig.objects.filter(platform='instagram_posts').update(is_active=False)\nprint(\"‚úÖ Deactivated existing Instagram configs\")\n\n# Create or update the correct configuration\nconfig, created = BrightdataConfig.objects.get_or_create(\n    platform='instagram_posts',\n    dataset_id=WORKING_DATASET_ID,\n    api_token=WORKING_API_TOKEN,\n    defaults={\n        'name': 'Instagram Posts - Working Config',\n        'is_active': True,\n        'description': 'Configuration matching working manualrun.py script'\n    }\n)\n\nif not created:\n    # Update existing config\n    config.is_active = True\n    config.name = 'Instagram Posts - Working Config'\n    config.description = 'Configuration matching working manualrun.py script'\n    config.save()\n    print(f\"‚úÖ Updated existing configuration: {config.id}\")\nelse:\n    print(f\"‚úÖ Created new configuration: {config.id}\")\n\nprint(f\"\\nüìã FINAL CONFIGURATION:\")\nprint(f\"ID: {config.id}\")\nprint(f\"Name: {config.name}\")\nprint(f\"Platform: {config.platform}\")\nprint(f\"Dataset ID: {config.dataset_id}\")\nprint(f\"API Token: {config.api_token}\")\nprint(f\"Is Active: {config.is_active}\")\n\n# Verify it matches\nif config.api_token == WORKING_API_TOKEN and config.dataset_id == WORKING_DATASET_ID:\n    print(\"\\nüéâ SUCCESS! Database now matches your working script exactly!\")\n    print(\"\\nüß™ Your web system should now work identically to manualrun.py\")\nelse:\n    print(\"\\n‚ùå Something went wrong with the update\")\n\nprint(\"\\n\" + \"=\" * 50)\nprint(\"‚úÖ DATABASE UPDATE COMPLETE\")\n
